[build-system]
requires = [
    "setuptools>=50.3.2",
    "wheel>=0.35.1",
    "scikit-build>=0.11.1",
    "cmake>=3.10",
    "Cython>=0.29.21",
    "numpy>=1.19.0",
    "toml",
]
build-backend = "setuptools.build_meta"

[project]
name = "hap.py"
version = "0.3.15" # From CMakeLists.txt and install.py
description = "A set of programs to benchmark variant calls against gold standard truth datasets."
readme = "README.md"
license = { file = "LICENSE.txt" }
requires-python = ">=3.8"
authors = [
    { name = "Peter Krusche", email = "pkrusche@illumina.com" },
    { name = "The hap.py development team" }
]
maintainers = [
    { name = "The hap.py development team" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Operating System :: OS Independent",
]

packages = [
    { include = "hap_py", from = "src" },
]

dependencies = [
    "numpy>=1.19.0",
    "pandas>=1.0.5",
    "psutil>=5.8.0",
    "pysam>=0.16.0",
    "scipy>=1.5.0",
    "bx-python>=0.8.9",
    "setuptools>=50.3.2",
    "wheel>=0.35.1",
]

[project.optional-dependencies]
cpp = [
    "Cython>=0.29.21",
]
dev = [
    "pytest>=6.0.1",
    "pytest-cov>=2.10.0",
    "nose>=1.3.7",
    "black==23.3.0",
    "ruff==0.0.262",
    "isort==5.12.0",
    "mypy==1.2.0",
    "pre-commit",
    "tox",
]
viz = [
    "matplotlib>=3.3.0",
    "seaborn>=0.11.0",
]
docs = [
    "sphinx",
    "sphinx-rtd-theme",
]

[project.urls]
Homepage = "https://github.com/Illumina/hap.py"
"Bug Tracker" = "https://github.com/Illumina/hap.py/issues"
Documentation = "https://hap-py.readthedocs.io/en/latest/"

[project.scripts]
hap = "hap_py.hap:main"
qfy = "hap_py.qfy:main"
pre = "hap_py.pre:main"

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = false
strict_optional = false
ignore_missing_imports = true
allow_redefinition = true

[tool.ruff]
line-length = 88
target-version = "py38"
exclude = ['src/sh', '.github/']

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501", "E402"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[[tool.mypy.overrides]]
module = [
    "Haplo.*",
    "pandas.*",
    "scipy.*",
    "numpy.*",
    "pysam.*"
]
ignore_missing_imports = true

[tool.scikit-build]
cmake.source-dir = "."
cmake.args = [] # e.g. ["-DCMAKE_BUILD_TYPE=Release"]
# cmake.build-type = "Release" # Alternative to cmake.args
# cmake.minimum-version = "3.10" # Redundant if in build-system.requires, but can be assertive
install.strip = false # Default is true, might be needed for debugging symbols

[tool.flake8]
ignore = "E226,E302,E41,E402"
max-line-length = 160
max-complexity = 1000
